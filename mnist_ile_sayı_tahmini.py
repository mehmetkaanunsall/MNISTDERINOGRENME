# -*- coding: utf-8 -*-
"""MNIST ile sayı tahmini.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kjHQSZ_NwyXohkq4rY5gtNpWdABmt_sS

##MNIST veri kümesini yükle
"""

from keras.datasets import mnist

(train_images, train_labels),(test_images,test_labels) = mnist.load_data()

train_images.shape

train_labels.shape

"""#Yapay Sinir Ağı Mimarisi"""

from keras import models
from keras import layers

#network adında boş bir model oluşturduk
network  = models.Sequential()
#oluşturduğumuz network modeline düz bir sinir ağı katmanı(Dense) ekleyelim
network.add(layers.Dense(512,activation="relu" , input_shape = (28*28,)))
network.add(layers.Dense(10,activation="softmax"))

"""## Yapay Sinir Ağının Derlenmesi"""

network.compile(optimizer="rmsprop",
                loss = "categorical_crossentropy",
                metrics=["accuracy"]
                )

"""##Giriş ve etiketlerin hazırlanması"""

train_images = train_images.reshape((60000,28*28))
train_images = train_images.astype("float32")/255

test_images = test_images.reshape((10000,28*28))
test_images = test_images.astype("float32")/255

from tensorflow.keras.utils import to_categorical

train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

"""## Yapay Sinir Ağ Modelinin Eğitilmesi"""

network.fit(train_images,train_labels, epochs = 5, batch_size=128)

test_loss , test_acc = network.evaluate(test_images,test_labels)

print(test_loss)

print(test_acc)

